services:
  postgres:
    container_name: ms_pg_sql
    image: postgres
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      PGDATA: /var/lib/postgresql/data
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - 5432:5432
    networks:
      - microservices-net
    restart: unless-stopped

  mysql:
    container_name: ms_mysql
    image: mysql
    environment:
      MYSQL_ROOT_USER: root
      MYSQL_ROOT_PASSWORD: root
    ports:
      - 3306:3306
    expose:
      - "3306"
    volumes:
      - mysql:/var/lib/mysql
    networks:
      microservices-net:
    restart: unless-stopped

  redis:
    container_name: redis
    image: redis/redis-stack-server
    ports:
      - 6379:6379
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    volumes:
      - redis_data:/data
  
  redis_insights:
    container_name: redis_insights
    image: redis/redisinsight:latest
    restart: unless-stopped
    depends_on:
      - redis
    ports:
      - 5540:5540
    volumes:
      - redis_insights_data:/data

networks:
  microservices-net:
    driver: bridge

volumes:
  postgres:
  mysql:
  redis_data:
  redis_insights_data: